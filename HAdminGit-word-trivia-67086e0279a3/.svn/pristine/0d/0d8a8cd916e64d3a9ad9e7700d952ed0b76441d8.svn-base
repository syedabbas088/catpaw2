{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red100\green56\blue32;\red196\green26\blue22;\red170\green13\blue145;
\red92\green38\blue153;\red46\green13\blue110;\red38\green71\blue75;\red28\green0\blue207;\red63\green110\blue116;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 #import \cf3 "SplashViewController.h"\cf2 \
\cf0 \
\cf4 @implementation\cf0  SplashViewController\
\
- (\cf4 id\cf0 )initWithNibName:(\cf5 NSString\cf0  *)nibNameOrNil bundle:(\cf5 NSBundle\cf0  *)nibBundleOrNil\
\{\
    \cf4 self\cf0  = [\cf4 super\cf0  \cf6 initWithNibName\cf0 :nibNameOrNil \cf6 bundle\cf0 :nibBundleOrNil];\
    \cf4 if\cf0  (\cf4 self\cf0 )\
    \{\
        \
    \}\
    \cf4 return\cf0  \cf4 self\cf0 ;\
\}\
- (\cf4 void\cf0 )viewDidLoad\
\{\
    [\cf4 super\cf0  \cf6 viewDidLoad\cf0 ];\
	NSString * Path = [self applicationDocumentsDirectory];\
	NSLog(@"Path:%@",Path);\
    [\cf4 self\cf0  \cf7 Setup_Controls\cf0 ];\
    [\cf4 self\cf0  \cf7 Perform_First_Time_Running_Functionality\cf0 ];\
\}\
\
- (\cf5 NSString\cf0  *) applicationDocumentsDirectory\
\{\
    \cf5 NSArray\cf0  *paths = \cf6 NSSearchPathForDirectoriesInDomains\cf0 (\cf6 NSDocumentDirectory\cf0 , \cf6 NSUserDomainMask\cf0 , \cf4 YES\cf0 );\
    \cf5 NSString\cf0  *basePath = ([paths \cf6 count\cf0 ] > \cf8 0\cf0 ) ? [paths \cf6 objectAtIndex\cf0 :\cf8 0\cf0 ] : \cf4 nil\cf0 ;\
    \cf4 return\cf0  basePath;\
\}\
\
-(\cf4 void\cf0 )Setup_Controls\
\{\
    \cf4 self\cf0 .\cf5 navigationController\cf0 .\cf5 navigationBarHidden\cf0  = \cf4 YES\cf0 ;\
    \cf4 if\cf0  ([\cf4 self\cf0  \cf6 respondsToSelector\cf0 :\cf4 @selector\cf0 (setNeedsStatusBarAppearanceUpdate)])\
    \{\
        \cf4 self\cf0 .\cf5 edgesForExtendedLayout\cf0  = \cf6 UIRectEdgeNone\cf0 ;\
        \cf4 self\cf0 .\cf5 extendedLayoutIncludesOpaqueBars\cf0  = \cf4 YES\cf0 ;\
    \}\
    \cf4 if\cf0  ([[\cf9 DataManager\cf0  \cf7 DataManagerSharedInstance\cf0 ] \cf7 My_Device_Type\cf0 ] == \cf8 2\cf0 )\
    \{\
        \cf5 CGRect\cf0  Frame = \cf4 self\cf0 .\cf5 view\cf0 .\cf5 frame\cf0 ;\
        Frame.\cf5 origin\cf0 .\cf5 x\cf0  = \cf8 0\cf0 ;\
        Frame.\cf5 origin\cf0 .\cf5 y\cf0  = \cf8 0\cf0 ;\
        Frame.\cf5 size\cf0 .\cf5 height\cf0  = \cf8 568\cf0 ;\
        \cf4 self\cf0 .\cf5 view\cf0 .\cf5 frame\cf0  = Frame;\
        \
        \cf4 self\cf0 .\cf9 BackgroundImage\cf0 .\cf5 image\cf0  = [\cf5 UIImage\cf0  \cf6 imageNamed\cf0 :\cf3 @"Default-568h.png"\cf0 ];\
    \}\
    [\cf4 self\cf0  \cf7 Update_Controls\cf0 ];\
\}\
-(\cf4 void\cf0 )Update_Controls\
\{\
    \
\}\
\
-(\cf4 void\cf0 )parsing_success\
\{\
    [\cf4 self\cf0  \cf7 Load_Packs_Data\cf0 ];\
    [[\cf9 DataManager\cf0  \cf7 DataManagerSharedInstance\cf0 ] \cf7 SetAppNotRunningFirstTime\cf0 ];\
\}\
-(\cf4 void\cf0 )parsing_error\
\{\
    \cf5 NSError\cf0  *error;\
    \
    \
    \cf5 NSString\cf0  *filename = [[\cf5 NSBundle\cf0  \cf6 mainBundle\cf0 ] \cf6 pathForResource\cf0 : \cf3 @"UpdatedXMLMay 29-new"\cf0  \cf6 ofType\cf0 : \cf3 @"xml"\cf0 ];\
    \
    \
    \cf5 NSString\cf0 * contents = [\cf5 NSString\cf0  \cf6 stringWithContentsOfFile\cf0 :filename\
                                                   \cf6 encoding\cf0 :\cf6 NSUTF8StringEncoding\cf0 \
                                                      \cf6 error\cf0 :&error];\
    \cf5 NSData\cf0 * xmlData = [contents \cf6 dataUsingEncoding\cf0 :\cf6 NSUTF8StringEncoding\cf0 ];\
    [[\cf9 XmlParser\cf0  \cf7 XmlParserSharedInstance\cf0 ] \cf7 startParsingData\cf0 :xmlData \cf7 delegate\cf0 :\cf4 self\cf0  \cf7 requestSelector\cf0 :\cf4 @selector\cf0 (parsing_success) \cf7 WithErrorSelector\cf0 :\cf4 @selector\cf0 (parsing_error)];\
    \
    \
\}\
\
\
-(\cf4 void\cf0 )Perform_First_Time_Running_Functionality\
\{\
    \cf4 if\cf0  ([[\cf9 DataManager\cf0  \cf7 DataManagerSharedInstance\cf0 ] \cf7 IsAppRunningFirstTime\cf0 ] == \cf4 YES\cf0 )\
    \{\
        \cf5 NSError\cf0  *error;\
        \
        \
        \cf5 NSString\cf0  *filename = [[\cf5 NSBundle\cf0  \cf6 mainBundle\cf0 ] \cf6 pathForResource\cf0 : \cf3 @"UpdatedXMLMay 29-new"\cf0  \cf6 ofType\cf0 : \cf3 @"xml"\cf0 ];\
        \
        \
        \cf5 NSString\cf0 * contents = [\cf5 NSString\cf0  \cf6 stringWithContentsOfFile\cf0 :filename\
                                                       \cf6 encoding\cf0 :\cf6 NSUTF8StringEncoding\cf0 \
                                                          \cf6 error\cf0 :&error];\
        \cf5 NSData\cf0 * xmlData = [contents \cf6 dataUsingEncoding\cf0 :\cf6 NSUTF8StringEncoding\cf0 ];\
        [[\cf9 XmlParser\cf0  \cf7 XmlParserSharedInstance\cf0 ] \cf7 startParsingData\cf0 :xmlData \cf7 delegate\cf0 :\cf4 self\cf0  \cf7 requestSelector\cf0 :\cf4 @selector\cf0 (parsing_success) \cf7 WithErrorSelector\cf0 :\cf4 @selector\cf0 (parsing_error)];\
        [[\cf9 DataManager\cf0  \cf7 DataManagerSharedInstance\cf0 ] \cf7 Set_Coins\cf0 :\cf8 150\cf0 ];\
    \}\
    \cf4 else\cf0 \
    \{\
        [\cf4 self\cf0  \cf7 Load_Packs_Data\cf0 ];\
    \}\
    \
\}\
-(\cf4 void\cf0 )Load_Packs_Data\
\{\
    [[\cf9 DataManager\cf0  \cf7 DataManagerSharedInstance\cf0 ] \cf7 LoadAllPacksData\cf0 ];\
    [\cf4 self\cf0  \cf6 performSelector\cf0 :\cf4 @selector\cf0 (Remove_Me) \cf6 withObject\cf0 :\cf4 nil\cf0  \cf6 afterDelay\cf0 :\cf8 1.0\cf0 ];\
\}\
-(\cf4 void\cf0 )Remove_Me\
\{\
    \cf9 AppDelegate\cf0  *Delegate_ = [[\cf5 UIApplication\cf0  \cf6 sharedApplication\cf0 ] \cf6 delegate\cf0 ];\
    [Delegate_ \cf7 Remove_Splash\cf0 ];\
\}\
-(\cf4 void\cf0 )Unload_Controls\
\{\
    [\cf5 NSObject\cf0  \cf6 cancelPreviousPerformRequestsWithTarget\cf0 :\cf4 self\cf0 ];\
\}\
-(\cf4 void\cf0 )willAnimateRotationToInterfaceOrientation:(\cf5 UIInterfaceOrientation\cf0 )toInterfaceOrientation duration:(\cf5 NSTimeInterval\cf0 )duration\
\{\
    \
\}\
- (\cf4 BOOL\cf0 )shouldAutorotateToInterfaceOrientation:(\cf5 UIInterfaceOrientation\cf0 )interfaceOrientation\
\{\
    \cf4 if\cf0  (interfaceOrientation == \cf6 UIInterfaceOrientationPortrait\cf0  ||\
        interfaceOrientation == \cf6 UIInterfaceOrientationPortraitUpsideDown\cf0  ||\
        interfaceOrientation == \cf6 UIDeviceOrientationFaceUp\cf0  ||\
        interfaceOrientation == \cf6 UIDeviceOrientationFaceDown\cf0  ||\
        interfaceOrientation == \cf6 UIDeviceOrientationUnknown\cf0 )\
    \{\
        \cf4 return\cf0  \cf4 YES\cf0 ;\
    \}\
    \cf4 else\cf0 \
    \{\
        \cf4 return\cf0  \cf4 NO\cf0 ;\
    \}\
\}\
- (\cf4 BOOL\cf0 )shouldAutorotate\
\{\
    \cf4 return\cf0  \cf4 YES\cf0 ;\
\}\
-(\cf5 NSUInteger\cf0 )supportedInterfaceOrientations\
\{\
    \cf4 return\cf0  (\cf6 UIInterfaceOrientationMaskPortrait\cf0  | \cf6 UIInterfaceOrientationMaskPortraitUpsideDown\cf0 );\
\}\
- (\cf4 void\cf0 )didReceiveMemoryWarning\
\{\
    [\cf4 super\cf0  \cf6 didReceiveMemoryWarning\cf0 ];\
\}\
- (\cf4 void\cf0 )viewDidUnload\
\{\
    [\cf4 self\cf0  \cf7 Unload_Controls\cf0 ];\
    [\cf4 super\cf0  \cf6 viewDidUnload\cf0 ];\
\}\
-(\cf4 void\cf0 )dealloc\
\{\
    [\cf4 self\cf0  \cf7 Unload_Controls\cf0 ];\
\}\
\
\cf4 @end}